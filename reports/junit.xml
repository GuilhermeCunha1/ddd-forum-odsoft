<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="18" failures="0" errors="0" time="7.192">
  <testsuite name="src\shared\core\Guard.spec.ts" errors="0" failures="0" skipped="0" timestamp="2024-10-05T13:26:27" time="2.1" tests="9">
    <testcase classname="guard › combined results-knows that two successful results equates to success" name="guard › combined results-knows that two successful results equates to success" time="0.001">
    </testcase>
    <testcase classname="guard › combined results-knows that one success, one failure equates to overall failure" name="guard › combined results-knows that one success, one failure equates to overall failure" time="0.001">
    </testcase>
    <testcase classname="guard › against null or undefined-knows that value provided equates to success" name="guard › against null or undefined-knows that value provided equates to success" time="0">
    </testcase>
    <testcase classname="guard › against null or undefined-knows that null value equates to failure" name="guard › against null or undefined-knows that null value equates to failure" time="0.001">
    </testcase>
    <testcase classname="guard › against null or undefined-knows that undefined value equates to failure" name="guard › against null or undefined-knows that undefined value equates to failure" time="0">
    </testcase>
    <testcase classname="guard › against null or undefined-knows that empty string still equates to success" name="guard › against null or undefined-knows that empty string still equates to success" time="0">
    </testcase>
    <testcase classname="guard › against null or undefined bulk-knows that values provided equates to success" name="guard › against null or undefined bulk-knows that values provided equates to success" time="0">
    </testcase>
    <testcase classname="guard › against null or undefined bulk-knows that a single null value equates to failure" name="guard › against null or undefined bulk-knows that a single null value equates to failure" time="0.001">
    </testcase>
    <testcase classname="guard › against null or undefined bulk-knows that a single undefined value equates to failure" name="guard › against null or undefined bulk-knows that a single undefined value equates to failure" time="0">
    </testcase>
  </testsuite>
  <testsuite name="src\api_test\global.api.test.ts" errors="0" failures="0" skipped="0" timestamp="2024-10-05T13:26:27" time="2.982" tests="4">
    <testcase classname="Users endpoint-Post - Create User" name="Users endpoint-Post - Create User" time="0.033">
    </testcase>
    <testcase classname="Users endpoint-Post Login" name="Users endpoint-Post Login" time="0.004">
    </testcase>
    <testcase classname="Users endpoint-Get Me" name="Users endpoint-Get Me" time="0.004">
    </testcase>
    <testcase classname="Posts endpoint-Get popular posts" name="Posts endpoint-Get popular posts" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="src\modules\forum\domain\postSlug.spec.ts" errors="0" failures="0" skipped="0" timestamp="2024-10-05T13:26:27" time="3.51" tests="2">
    <testcase classname="-Should be able to create a post slug" name="-Should be able to create a post slug" time="0.002">
    </testcase>
    <testcase classname="-Should be able to parse out any bad characters not suitable for a slug" name="-Should be able to parse out any bad characters not suitable for a slug" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="src\modules\forum\domain\services\postService.spec.ts" errors="0" failures="0" skipped="0" timestamp="2024-10-05T13:26:27" time="6.19" tests="3">
    <testcase classname="-Comments: Given one member, a downvote to a post without any votes should add one downvote" name="-Comments: Given one member, a downvote to a post without any votes should add one downvote" time="0.014">
    </testcase>
    <testcase classname="-Comments: Given one member, several downvotes to an already downvoted post should do nothing." name="-Comments: Given one member, several downvotes to an already downvoted post should do nothing." time="0.002">
    </testcase>
    <testcase classname="-Comments: Given one member, a downvote to a comment it already upvoted should merely remove the upvote and create no additional downvote" name="-Comments: Given one member, a downvote to a comment it already upvoted should merely remove the upvote and create no additional downvote" time="0.001">
    </testcase>
  </testsuite>
</testsuites>